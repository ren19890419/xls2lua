#! /usr/bin/env python
# -*- coding: utf-8 -*
# author: luzexi

import xlrd
import os.path
import time
import os

SCRIPT_HEAD = "-- this file is generated by program!\n\
-- don't change it manaully.\n\
-- source file: %s\n\
-- created at: %s\n\
\n\
\n\
"

def make_table(filename):
	if not os.path.isfile(filename):
		raise NameError, "%s is	not	a valid	filename" % filename
	# book_xlrd = xlrd.open_workbook(filename,formatting_info=True)
	book_xlrd = xlrd.open_workbook(filename)

	excel = {}
	excel["filename"] = filename
	excel["data"] = {}
	for sheet in book_xlrd.sheets():
		sheet_name = sheet.name.replace(" ", "_")
		excel["data"][sheet_name] = {}
		row_idx = 0
		for row_idx in xrange(sheet.nrows):
			row = {}
			col_idx = 0
			for col_idx in xrange(sheet.ncols):
				value = sheet.cell_value(row_idx, col_idx)
				vtype = sheet.cell_type(row_idx, col_idx)
				v = None
				if vtype == 2:
					v = int(value)
				row[col_idx] = v
			excel["data"][sheet_name][row_idx] = row
	return excel, 0 , "ok"
	
def write_to_lua_script(excel, output_path):
	if not os.path.exists(output_path):
		os.mkdir(output_path)
	for (sheet_name, sheet) in excel["data"].items():
		outfp = open(output_path + "/" + sheet_name + ".lua", 'w')
		create_time = time.strftime("%a %b %d %H:%M:%S %Y", time.gmtime(time.time()))
		outfp.write(SCRIPT_HEAD % (excel["filename"], create_time)) 
		outfp.write("local data = {}\n")
		outfp.write("\n")
		for (row_idx, row) in sheet.items():
			outfp.write("[" + '%2s'%str(row_idx) + "] = {")
			field_index = 0
			for (col_idx, field)in row.items():
				if field_index > 0:
					outfp.write(", ")
				field_index += 1
				outfp.write(" " + '%7s'%row[col_idx])
			outfp.write("},\n")

		outfp.write("\nreturn data\n")
		outfp.close()
		
def main():
	import sys
	if len(sys.argv) < 3:
		sys.exit('''usage: xls2lua.py excel_name output_path''')
	filename = sys.argv[1]
	output_path = sys.argv[2]
	if not os.path.exists(filename):
		sys.exit("error: "+filename+" is not exists.")
	t, ret, errstr = make_table(filename)
	if ret != 0:
		print(filename)
		print "error: " + errstr
	else:
		print(filename)
		print "res:"
		# print(t)
		print "success!!!"
	write_to_lua_script(t, output_path)

if __name__=="__main__":
	main()